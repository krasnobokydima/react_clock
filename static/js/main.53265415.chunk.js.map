{"version":3,"sources":["components/Clock.tsx","components/Button.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","pervProps","prev","name","now","props","console","log","clearInterval","toLocaleTimeString","React","Component","Button","type","onClick","App","isClockVisible","clockName","setRandom","Math","random","hiding","showing","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAiC,KALnC,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBK,GACjB,IAAMC,EAAOD,EAAUE,KACjBC,EAAMN,KAAKO,MAAMF,KAEnBD,IAASE,GAEXE,QAAQC,IAAR,qCAA0CL,EAA1C,eAAqDE,MAnB3D,kCAuBE,WACuB,OAAjBN,KAAKD,SACPW,cAAcV,KAAKD,WAzBzB,oBA6BE,WACE,OACE,+BACG,iBACAC,KAAKJ,MAAMC,KAAKc,4BAjCzB,GAA2BC,IAAMC,WCHpBC,EAA0B,SAACP,GACtC,OACE,wBACEQ,KAAK,SACLC,QAAST,EAAMS,QAFjB,SAIGT,EAAMF,QCHPY,E,4MACJrB,MAAQ,CACNsB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKlB,SAAS,CACZiB,UAAWE,KAAKC,Y,EAIpBC,OAAS,WACP,EAAKrB,SAAS,CACZgB,gBAAgB,K,EAIpBM,QAAU,WACR,EAAKtB,SAAS,CACZgB,gBAAgB,K,4CAIpB,WACE,OACE,gCACIlB,KAAKJ,MAAMsB,gBACX,cAAC,EAAD,CACEb,KAAML,KAAKJ,MAAMuB,YAIrB,cAAC,EAAD,CACEd,KAAK,aACLW,QAAShB,KAAKuB,SAEhB,cAAC,EAAD,CACElB,KAAK,aACLW,QAAShB,KAAKwB,UAGhB,cAAC,EAAD,CACEnB,KAAK,oBACLW,QAAShB,KAAKoB,mB,GA5CNR,IAAMC,WAmDTI,IC1DfQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.53265415.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  date: Date,\n}\n\ninterface Props {\n  name: number,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timeout | null = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(pervProps: Props) {\n    const prev = pervProps.name;\n    const now = this.props.name;\n\n    if (prev !== now) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prev} to ${now}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId !== null) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <h1>\n        {'Current time: '}\n        {this.state.date.toLocaleTimeString()}\n      </h1>\n    );\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  name: string,\n  onClick: () => void,\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  return (\n    <button\n      type=\"submit\"\n      onClick={props.onClick}\n    >\n      {props.name}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { Button } from './components/Button';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandom = () => {\n    this.setState({\n      clockName: Math.random(),\n    });\n  };\n\n  hiding = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  showing = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        { this.state.isClockVisible && (\n          <Clock\n            name={this.state.clockName}\n          />\n        )}\n\n        <Button\n          name=\"Hide clock\"\n          onClick={this.hiding}\n        />\n        <Button\n          name=\"Show clock\"\n          onClick={this.showing}\n        />\n\n        <Button\n          name=\"Set a random name\"\n          onClick={this.setRandom}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}